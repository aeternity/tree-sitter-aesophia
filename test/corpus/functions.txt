==================
Functions
==================

contract Test =
    function a() = 1
    private function b() = 1
    stateful function c() = 1

---

(source_file
  (contract_declaration
    (constructor)
    (function_declaration (identifier) (arguments)
      (statement (expression (int))))
    (function_modifier) (function_declaration (identifier) (arguments)
      (statement (expression (int))))
    (function_modifier) (function_declaration (identifier) (arguments)
      (statement (expression (int))))
))

==================
Entrypoints
==================

contract Test =
    entrypoint a() = 1
    payable entrypoint b() = 1
    stateful entrypoint c() = 1

---

(source_file
  (contract_declaration
    (constructor)
    (function_declaration (identifier) (arguments)
      (statement (expression (int))))
    (entrypoint_modifier) (function_declaration (identifier) (arguments)
      (statement (expression (int))))
    (entrypoint_modifier) (function_declaration (identifier) (arguments)
      (statement (expression (int))))
))

==================
Arguments
==================

contract Test =
    function a(a: int) = 1
    function b(a: int, b: int) = 1

---

(source_file
  (contract_declaration
    (constructor)
    (function_declaration (identifier)
      (arguments (pattern (expression (expression (identifier)) (type (identifier)))))
      (statement (expression (int))))
    (function_declaration (identifier)
      (arguments 
        (pattern (expression (expression (identifier)) (type (identifier))))
        (pattern (expression (expression (identifier)) (type (identifier)))))
      (statement (expression (int))))
))

==================
Body statements
==================

contract Test =
    function a(a: int, b: int) = a + b
    function b(a: int, b: int) =
      a + b

---

(source_file
  (contract_declaration
    (constructor)
    (function_declaration (identifier)
      (arguments 
        (pattern (expression (expression (identifier)) (type (identifier))))
        (pattern (expression (expression (identifier)) (type (identifier)))))
      (statement (expression 
        (binary_operator (expression (identifier)) (expression (identifier))))))
    (function_declaration (identifier)
      (arguments 
        (pattern (expression (expression (identifier)) (type (identifier))))
        (pattern (expression (expression (identifier)) (type (identifier)))))
      (statement (expression 
        (binary_operator (expression (identifier)) (expression (identifier))))))
))